#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R     &kp T          &kp Y          &kp U         &kp I      &kp O    &kp P          &mt DEL LEFT_BRACKET
&kp ESC    &kp A  &kp S  &kp D      &kp F     &kp G          &kp H          &kp J         &kp K      &kp L    &kp SEMI       &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V     &kp B          &kp N          &kp M         &kp COMMA  &kp DOT  &mt BSLH FSLH  &kp RBKT
                         &kp LCTRL  &kp LALT  &lt 1 SPACE    &kp BACKSPACE  &kp LEFT_WIN  &kp ENTER
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp KP_MULTIPLY  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL          &kp GRAVE  &kp F1  &kp F2   &kp F3   &kp F4   &none
&trans  &kp KP_DIVIDE    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &mt LCTRL MINUS    &kp PLUS   &kp F5  &kp F6   &kp F7   &kp F8   &none
&trans  &kp KP_DOT       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0       &none      &kp F9  &kp F10  &kp F11  &kp F12  &none
                                       &lt 2 LCTRL   &trans        &trans             &trans     &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp DELETE    &kp HOME    &kp UP_ARROW      &kp END     &kp ESC          &kp INSERT      &none           &kp UP    &none      &kp SLCK         &kp C_VOLUME_UP
&trans  &kp INS       &kp LEFT    &kp DOWN          &kp RIGHT   &kp PAGE_UP      &kp LEFT_SHIFT  &kp LEFT        &kp DOWN  &kp RIGHT  &kp INS          &kp C_VOLUME_DOWN
&trans  &kp LEFT_WIN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp PAGE_DOWN    &kp LCTRL       &none           &none     &none      &kp PAUSE_BREAK  &kp K_MUTE
                                  &trans            &trans      &trans           &trans          &bt BT_CLR_ALL  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
